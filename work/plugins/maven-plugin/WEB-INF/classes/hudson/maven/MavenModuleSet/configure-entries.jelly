<!--
The MIT License

Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi, Seiji Sogabe

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<!--
  Config page.
-->
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt" xmlns:p="/lib/hudson/project">
  <st:include page="configure-common.jelly" />

  <p:config-trigger>
    <!-- setting to ignore upstream changes is done as a pseudo-trigger -->
    <f:optionalBlock name="maven.triggerByDependency"
        help="/plugin/maven-plugin/ignore-upstrem-changes.html"
        title="${%Build whenever a SNAPSHOT dependency is built}"
        checked="${h.defaultToTrue(!it.ignoreUpstremChanges())}" />
    <p:config-upstream-pseudo-trigger />
  </p:config-trigger>

  <f:section title="${%Build}">
    <j:set var="mavens" value="${it.descriptor.mavenDescriptor.installations}" />
    <j:if test="${empty(mavens)}">
      <!-- no maven installation is configured. this will be an error, so warn the user now -->
      <f:entry title="${%Maven Version}">
        <div class="error">
          ${%Maven Version.error.1}&lt;br>
          ${%Maven Version.error.2(rootURL)}
        </div>
      </f:entry>
    </j:if>
    <j:if test="${mavens.size() gt 1}">
      <!-- choice not necessary if there's no choice -->
      <f:entry title="${%Maven Version}">
        <select class="setting-input" name="maven_version">
          <j:forEach var="inst" items="${mavens}">
            <f:option selected="${inst.name==it.maven.name}">${inst.name}</f:option>
          </j:forEach>
        </select>
      </f:entry>
    </j:if>
    <f:entry title="${%Root POM}" help="/plugin/maven-plugin/root-pom.html">
      <f:textbox name="rootPOM" value="${it.rootPOM}"
              checkUrl="'checkFileInWorkspace?value='+escape(this.value)" />
    </f:entry>
    <f:entry title="${%Goals and options}" help="/plugin/maven-plugin/goals.html">
      <f:textbox name="goals" value="${it.userConfiguredGoals}"/>
    </f:entry>
    <f:advanced>
      <f:entry title="MAVEN_OPTS" help="/plugin/maven-plugin/maven-opts.html">
        <f:expandableTextbox name="mavenOpts" value="${it.mavenOpts}" />
      </f:entry>
      <f:entry title="${%Alternate settings file}"
               help="/plugin/maven-plugin/alternate-settings.html">
        <f:textbox name="alternateSettings"
                   value="${it.alternateSettings}" 
                   checkUrl="'checkFileRelative?value='+escape(this.value)"
                   />
      </f:entry>
      <f:optionalBlock name="maven.incrementalBuild"
                       title="${%Incremental build - only build changed modules}"
                       help="/plugin/maven-plugin/incremental.html"
                       checked="${it.isIncrementalBuild()}" />
      <f:optionalBlock name="maven.archivingDisabled"
                       title="${%Disable automatic artifact archiving}"
                       help="/plugin/maven-plugin/archivingDisabled.html"
                       checked="${it.isArchivingDisabled()}" />
      <f:optionalBlock name="maven.perModuleBuild" title="${%Build modules in parallel}" help="/plugin/maven-plugin/aggregator.html"
        checked="${!it.aggregatorStyleBuild}" />
      <f:optionalBlock name="maven.usePrivateRepository" title="${%Use private Maven repository}" help="/plugin/maven-plugin/private-repository.html"
        checked="${it.usesPrivateRepository()}" />
      <f:optionalBlock name="maven.resolveDependencies" title="${%Resolve Dependencies during Pom parsing}" 
        checked="${it.isResolveDependencies()}" /> 
      <f:optionalBlock name="maven.processPlugins" title="${%Process Plugins during Pom parsing}" 
        checked="${it.isProcessPlugins()}" />   
        
      <j:set var="mavenValidationLevels" value="${it.descriptor.mavenValidationLevels}" />   
      <f:entry title="${%Maven Validation Level}">
        <select class="setting-input" name="maven.validationLevel">
          <j:forEach var="level" items="${mavenValidationLevels}">
            <f:option selected="${it.mavenValidationLevel == level.value}" value="${level.value}">${level.key}</f:option>
          </j:forEach>
        </select>
      </f:entry>                 
    </f:advanced>
  </f:section>

  <j:invokeStatic var="reporters" className="hudson.maven.MavenReporters" method="getConfigurableList" />
  <j:if test="${!empty(reporters)}">
    <f:descriptorList title="${%Build Settings}"
                      descriptors="${reporters}"
                      instances="${it.reporters.toMap()}" />
  </j:if>

  <p:config-buildWrappers />
  <p:config-publishers />
</j:jelly>